#!/bin/bash
NO_COLOR="\e[0m"
RED="\e[1;31m"
GREY="\e[1;36m"
GREEN="\e[0;32m"
BLUE="\e[0;34m"
YELLOW="\e[0;33m"
BLACK="\e[0;30m"
PURPLE="\e[0;35m"

ps1_git() {
    local branch
    local status
    local color
    local numChanged
    local numUntracked
    local changed
    local untracked
    local stashed

    branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    if [ "$branch" ]; then
        status=$(git status --short)

        color=$GREEN
        numChanged=$(grep '^.M' <<< "$status" | wc -l | awk '{print $1}')
        numUntracked=$(grep '^??' <<< "$status" | wc -l | awk '{print $1}')
        numStashed=$(git stash list | grep "on $branch" | wc -l | awk '{print $1}')

        [ $numChanged -gt 0 ] && {
            changed=" ~${numChanged}"
            color=$PURPLE
        }
        [ $numUntracked -gt 0 ] && {
            untracked=" +$numUntracked"
        }
        [ $numStashed -gt 0 ] && {
            stashed=" {$numStashed}"
        }
        echo " \[$BLACK\] \[$color\]$branch$changed$untracked$stashed"
    fi
}

ps1_hg() {
    local branch
    local status
    local color
    local numChanged
    local numUntracked
    local changed
    local untracked

    branch=$(hg branch 2> /dev/null)
    if [ "$branch" ]; then
        status=$(hg status)

        color=$GREEN
        numChanged=$(grep '^M' <<< "$status" | wc -l | awk '{print $1}')
        numUntracked=$(grep '^?' <<< "$status" | wc -l | awk '{print $1}')

        [ $numChanged -gt 0 ] && {
            changed=" ~${numChanged}"
            color=$PURPLE
        }
        [ $numUntracked -gt 0 ] && {
            untracked=" +$numUntracked"
        }
        echo " \[$color\]hg:[$branch$changed$untracked]"
    fi
}

ps1_update() {
    [[ "$VIRTUAL_ENV" ]] && local env="($(basename $VIRTUAL_ENV)) "
    PS1="$env\[$GREEN\]\[$BLUE\]$PWD$(ps1_git)$(ps1_hg)\n  \[$BLUE\]\\\$ \[$NO_COLOR\]"
}

export PROMPT_COMMAND="ps1_update"
