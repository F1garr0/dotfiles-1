#!/bin/bash
NO_COLOR="\e[0m"
RED="\e[1;31m"
GREY="\e[1;36m"
GREEN="\e[1;32m"
BLUE="\e[1;34m"
YELLOW="\e[0;33m"
BLACK="\e[0;30m"
PURPLE="\e[1;35m"

is_subdir() {
    local path="$1"
    local parent="$2"
    python <<EOF
import os, sys
rel = os.path.relpath("${path}", "${parent}")
sys.exit(int(rel.startswith(os.pardir)))
EOF
}

ps1_git() {
    local branch
    local status
    local color
    local numChanged
    local numUntracked
    local changed
    local untracked
    local stashed

    branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    if [ "$branch" ]; then
        status=$(git status --short)

        color=$GREEN
        numChanged=$(grep '^.M' <<< "$status" | wc -l | awk '{print $1}')
        numUntracked=$(grep '^??' <<< "$status" | wc -l | awk '{print $1}')
        numStashed=$(git stash list | grep "on $branch" | wc -l | awk '{print $1}')

        [ $numChanged -gt 0 ] && {
            changed=" ~${numChanged}"
            color=$PURPLE
        }
        [ $numUntracked -gt 0 ] && {
            untracked=" +$numUntracked"
        }
        [ $numStashed -gt 0 ] && {
            stashed=" {$numStashed}"
        }
        echo " \[$BLACK\]\[$color\]$branch$changed$untracked$stashed"
    fi
}

ps1_hg() {
    local branch
    local status
    local color
    local numChanged
    local numUntracked
    local changed
    local untracked

    branch=$(hg branch 2> /dev/null)
    if [ "$branch" ]; then
        status=$(hg status)

        color=$GREEN
        numChanged=$(grep '^M' <<< "$status" | wc -l | awk '{print $1}')
        numUntracked=$(grep '^?' <<< "$status" | wc -l | awk '{print $1}')

        [ $numChanged -gt 0 ] && {
            changed=" ~${numChanged}"
            color=$PURPLE
        }
        [ $numUntracked -gt 0 ] && {
            untracked=" +$numUntracked"
        }
        echo " \[$color\]hg:[$branch$changed$untracked]"
    fi
}

ps1_dropbox() {
    echo " \[$PURPLE\]Dropbox: $(dropbox status)"
}

ps1_update() {
    local env
    local git
    local hg
    local dropbox

    [[ "$VIRTUAL_ENV" ]] && {
        env="($(basename $VIRTUAL_ENV)) "
    }

    git=$(ps1_git)
    hg=$(ps1_hg)

    is_subdir "$PWD" "$HOME/Dropbox" && {
        dropbox=$(ps1_dropbox)
    }

    [[ "$PDW" =~ "$HOME/Dropbox" ]] && {
        echo hi
    }

    PS1="$env\[$BLUE\]$PWD \[$NO_COLOR\]on\[$GREY\] $(hostname)"
    PS1="${PS1}${dropbox}${git}${hg}\n  \[$BLUE\]\\\$ \[$NO_COLOR\]"
}

_update_ps1() {
    PS1="$(powerline-shell.py --cwd-mode plain --mode flat)"
}

if [ "$TERM" != "linux" ]; then
    PROMPT_COMMAND=_update_ps1
fi
