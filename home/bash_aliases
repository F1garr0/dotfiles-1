#!/bin/bash

# grep aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

echo-do() {
  # Print a command and then run it.
    local cmd

    echo "$@" 1>&2
    "$@"
}

perg() {
  # Wrapper around grep. Excludes a bunch of files and
  # directories that don't need to be searched.
  # Also allows you to specify "+" as the last argument
  # which will cause the grep command to be printed to
  # the screen before it is executed.
    local args
    local pre

    args=( "$@" )
    pre=""

    [[ "${*:$#}" == "+" ]] && {
      args=( "${*:1:$#-1}" )
      pre="echo-do "
    }

    [[ ${#args[@]} -eq 1 ]] && {
        args=( "$1" '.' )
    }

    ${pre}egrep -Ir \
        --color=auto \
        --exclude=tags \
        --exclude-dir=.git \
        --exclude-dir=build \
        --exclude-dir=Framework \
        --exclude-dir=vendor \
        --exclude=*min.js \
        "${args[@]}"
}
alias gr=perg

gw() {
    perg "\<$1\>" "${*:2}"
}

# ls aliases
[[ "$(uname)" = "Darwin" ]] || alias ls='ls --color=auto'
alias l='ls -CF' # show in columns and add file indicators
alias ll='ls -la' # show all files in long format
alias la='ls -A' # show almost all entries (exclude . and ..)
alias lh='ls -a | egrep "^\."' # ONLY show hidden files

# git aliases
alias gist="git status --short" # use --short, not --porcelain. porcelain doesn't do coloring
alias c-="git checkout -"
alias b="git for-each-ref --sort=-committerdate refs/heads/"
alias giff="git diff --color-words --ignore-space-change"
alias yep="git push -u origin \$(git branch | grep '\*' | awk '{print \$2}')"
alias p="git push"
alias prune="git remote prune origin"
alias merged="git branch --merged"

dmerged() {
    for branch in $(merged | grep -v '^\*'); do
        git branch -d $branch
    done
    prune
}

short() { N=${1:-1}; git log -n $N --first-parent; }
long() { git log --first-parent; }

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias ping="ping -c 4"

# Goofing around
alias dc="echo \"dc? I think you meant cd.  Here, let me take care of that for you.
Oh I'm wrong?  Just \\\"cd -\\\" and use the real dc (/usr/bin/dc).\" ; cd"
alias cd..="echo \"I think you meant 'cd ..'.  Here, let me take care of that for you.\"; cd .."

rmswp() {
    ext=swp
    [ $1 ] && ext=$1
    find . -name \*.$ext -exec rm {} \;
}

alias unit='phpunit --debug --bootstrap=test/bootstrap.php'

do-ctags() {
    ctags-exuberant -R --fields=+S --languages=php "$@"
}

gvim() {
    /usr/bin/gvim -f "$@" &
}

alias e="install_env.sh box fryan@rjmetrics.com Y"

curl() {
    /usr/bin/curl "$@"; echo
}

man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}

alias tml="tmux list-sessions | column -t"
ta() {
    if (( $# > 0 )); then
        tmux attach -t "$@"
    else
        tmux attach -t "${PWD##*/}" || tmux attach
    fi
}
tn() {
    if (( $# > 0 )); then
        tmux new-session -s "$@"
    else
        tmux new-session -s "${PWD##*/}"
    fi
}


# task warrior
task() {
    if [[ -d .task ]]; then
        TASKDATA=.task /usr/bin/task "$@"
    else
        /usr/bin/task "$@"
    fi
}
alias ht="task add priority:H"
alias mt="task add priority:M"
alias lt="task add priority:L"
alias tt="task add"
alias tl="task list"
alias tm="task modify"

alias PR="hub pull-request"

alias workonthis='workon "${PWD##*/}"'
alias mkthis='mkvirtualenv -p $(which python3) "${PWD##*/}"'

alias target-stitch='/home/buck/.virtualenvs/target-stitch/bin/target-stitch'
