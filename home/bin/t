#!/bin/bash

set -e

doc="t: A tmux wrapper.

Usage: t <project>

Take the hassle out of managing tmux sessions. Instead, attach to the
batcheetah repository with:

    t batcheetah

Then, when you want to work on the RJMetrics repository, detach from your
current tmux session and use

    t rjm

It works by first attempting to attach to a tmux session named '<project>/'.
If no session with that name exists, this script will create a new session in

    /opt/code/<project>

If /opt/code/<project> does not exist, then this script will clone it from

    git@github.com:RJMetrics/<project>.git"

RED='\e[0;31m'
NC='\e[0m'

fatal() {
    echo -e "${RED}ERROR ${1}${NC}" >&2
    echo >&2
    echo "$doc" >&2
    exit 1
}

project=$1

if [[ -z $project ]]; then
    fatal "No project given"
fi

tmux_name="${project}/"

spawn_remote() {
    local tmux_name="$1"
    local project="$2"
    local path="$3"
    if [[ ! -d $path ]]; then
        git clone git@github.com:RJMetrics/$project.git "$path"
    fi
    cd "$path"
    tmux new-session -s "$tmux_name" -A
}

if [[ ${project:0:1} = "-" ]]; then
    case "$project" in
        -boxcutter)   cd ~/src/RJMetrics/boxcutter   ;;
        -cloudcutter) cd ~/src/RJMetrics/cloudcutter ;;
    esac
    tmux new-session -s "$tmux_name" -A
else
    ssh -t core "
        $(declare -f)
        spawn_remote $tmux_name $project /opt/code/$project
    "
fi
