#!/bin/bash

set -e

doc="t: A tmux wrapper.

Usage: t <project>

Take the hassle out of managing tmux sessions. Instead, attach to the
batcheetah repository with:

    t batcheetah

Then, when you want to work on the RJMetrics repository, detach from your
current tmux session and use

    t rjm

It works by first attempting to attach to a tmux session named '<project>/'.
If no session with that name exists, this script will create a new session in

    /opt/code/<project>

If /opt/code/<project> does not exist, then this script will clone it from

    git@github.com:RJMetrics/<project>.git"

RED='\e[0;31m'
NC='\e[0m'

fatal() {
    echo -e "${RED}ERROR ${1}${NC}" >&2
    echo >&2
    echo "$doc" >&2
    exit 1
}

project=$1

if [[ -z $project ]]; then
    fatal "No project given"
fi

if [[ ${project:0:1} = "-" ]]; then
    path=$HOME
    spawn_vim=false
else
    path=/opt/code/$project
    spawn_vim=false

    if [[ ! -d $path ]]; then
        git clone git@github.com:RJMetrics/$project.git $path
    fi
fi

tmux_name="${project}/"

tmux attach -t "$tmux_name" || {
    cd $path
    tmux new-session    -s "$tmux_name"     -d

    if [[ $spawn_vim = true ]]; then
        tmux split-window   -t "$tmux_name:0"   -h
        tmux select-pane    -t "$tmux_name:0.0"
        tmux respawn-pane   -t "$tmux_name:0.0" -k 'vim'
    fi

    tmux attach-session -t "$tmux_name"
}
